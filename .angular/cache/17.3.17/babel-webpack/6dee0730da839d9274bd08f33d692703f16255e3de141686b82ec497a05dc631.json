{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FeedbackService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7297/api/Feedback'; // Update with your backend URL\n  }\n  createFeedback(feedback) {\n    return this.http.post(this.apiUrl, feedback);\n  }\n  getEventFeedback(eventId) {\n    return this.http.get(`${this.apiUrl}/event/${eventId}`);\n  }\n  getFeedbackById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  updateFeedback(id, feedback) {\n    return this.http.put(`${this.apiUrl}/${id}`, feedback);\n  }\n  deleteFeedback(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function FeedbackService_Factory(t) {\n      return new (t || FeedbackService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FeedbackService,\n      factory: FeedbackService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["FeedbackService","constructor","http","apiUrl","createFeedback","feedback","post","getEventFeedback","eventId","get","getFeedbackById","id","updateFeedback","put","deleteFeedback","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/workspace/src/app/services/feedback.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { FeedbackCreateDTO, FeedbackResponseDTO, FeedbackSummaryDTO } from '../models/feedback.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedbackService {\n  private apiUrl = 'https://localhost:7297/api/Feedback'; // Update with your backend URL\n\n  constructor(private http: HttpClient) {}\n\n  createFeedback(feedback: FeedbackCreateDTO): Observable<FeedbackResponseDTO> {\n    return this.http.post<FeedbackResponseDTO>(this.apiUrl, feedback);\n  }\n\n  getEventFeedback(eventId: number): Observable<FeedbackSummaryDTO> {\n    return this.http.get<FeedbackSummaryDTO>(`${this.apiUrl}/event/${eventId}`);\n  }\n\n  getFeedbackById(id: number): Observable<FeedbackResponseDTO> {\n    return this.http.get<FeedbackResponseDTO>(`${this.apiUrl}/${id}`);\n  }\n\n  updateFeedback(id: number, feedback: FeedbackCreateDTO): Observable<FeedbackResponseDTO> {\n    return this.http.put<FeedbackResponseDTO>(`${this.apiUrl}/${id}`, feedback);\n  }\n\n  deleteFeedback(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}"],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,qCAAqC,CAAC,CAAC;EAEjB;EAEvCC,cAAcA,CAACC,QAA2B;IACxC,OAAO,IAAI,CAACH,IAAI,CAACI,IAAI,CAAsB,IAAI,CAACH,MAAM,EAAEE,QAAQ,CAAC;EACnE;EAEAE,gBAAgBA,CAACC,OAAe;IAC9B,OAAO,IAAI,CAACN,IAAI,CAACO,GAAG,CAAqB,GAAG,IAAI,CAACN,MAAM,UAAUK,OAAO,EAAE,CAAC;EAC7E;EAEAE,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACT,IAAI,CAACO,GAAG,CAAsB,GAAG,IAAI,CAACN,MAAM,IAAIQ,EAAE,EAAE,CAAC;EACnE;EAEAC,cAAcA,CAACD,EAAU,EAAEN,QAA2B;IACpD,OAAO,IAAI,CAACH,IAAI,CAACW,GAAG,CAAsB,GAAG,IAAI,CAACV,MAAM,IAAIQ,EAAE,EAAE,EAAEN,QAAQ,CAAC;EAC7E;EAEAS,cAAcA,CAACH,EAAU;IACvB,OAAO,IAAI,CAACT,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAIQ,EAAE,EAAE,CAAC;EACvD;;;uBAvBWX,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAfnB,eAAe;MAAAoB,OAAA,EAAfpB,eAAe,CAAAqB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}