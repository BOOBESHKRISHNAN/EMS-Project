{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class LocationService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7297/api/Location'; // Update with your backend URL\n  }\n  getLocations() {\n    return this.http.get(this.apiUrl);\n  }\n  getLocationById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createLocation(location) {\n    return this.http.post(this.apiUrl, location);\n  }\n  updateLocation(id, location) {\n    return this.http.put(`${this.apiUrl}/${id}`, location);\n  }\n  deleteLocation(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function LocationService_Factory(t) {\n      return new (t || LocationService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LocationService,\n      factory: LocationService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["LocationService","constructor","http","apiUrl","getLocations","get","getLocationById","id","createLocation","location","post","updateLocation","put","deleteLocation","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/workspace/src/app/services/location.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LocationWithEventsDto, LocationCreateDto, LocationUpdateDto, Location } from '../models/event.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n  private apiUrl = 'https://localhost:7297/api/Location'; // Update with your backend URL\n\n  constructor(private http: HttpClient) {}\n\n  getLocations(): Observable<LocationWithEventsDto[]> {\n    return this.http.get<LocationWithEventsDto[]>(this.apiUrl);\n  }\n\n  getLocationById(id: number): Observable<LocationWithEventsDto> {\n    return this.http.get<LocationWithEventsDto>(`${this.apiUrl}/${id}`);\n  }\n\n  createLocation(location: LocationCreateDto): Observable<Location> {\n    return this.http.post<Location>(this.apiUrl, location);\n  }\n\n  updateLocation(id: number, location: LocationUpdateDto): Observable<Location> {\n    return this.http.put<Location>(`${this.apiUrl}/${id}`, location);\n  }\n\n  deleteLocation(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}"],"mappings":";;AAQA,OAAM,MAAOA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,qCAAqC,CAAC,CAAC;EAEjB;EAEvCC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAA0B,IAAI,CAACF,MAAM,CAAC;EAC5D;EAEAG,eAAeA,CAACC,EAAU;IACxB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAwB,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACrE;EAEAC,cAAcA,CAACC,QAA2B;IACxC,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAW,IAAI,CAACP,MAAM,EAAEM,QAAQ,CAAC;EACxD;EAEAE,cAAcA,CAACJ,EAAU,EAAEE,QAA2B;IACpD,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAW,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,QAAQ,CAAC;EAClE;EAEAI,cAAcA,CAACN,EAAU;IACvB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;;uBAvBWP,eAAe,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAflB,eAAe;MAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;MAAAC,UAAA,EAFd;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}