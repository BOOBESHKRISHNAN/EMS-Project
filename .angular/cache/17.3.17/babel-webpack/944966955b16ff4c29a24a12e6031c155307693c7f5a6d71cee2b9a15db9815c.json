{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\nimport { RoleGuard } from './guards/role.guard';\nimport { UserRole } from './models/user.model';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { EventListComponent } from './components/events/event-list/event-list.component';\nimport { EventFormComponent } from './components/events/event-form/event-form.component';\nimport { EventDetailComponent } from './components/events/event-detail/event-detail.component';\nimport { TicketBookingComponent } from './components/tickets/ticket-booking/ticket-booking.component';\nimport { MyTicketsComponent } from './components/tickets/my-tickets/my-tickets.component';\nimport { LocationManagementComponent } from './components/locations/location-management/location-management.component';\nimport { UnauthorizedComponent } from './components/unauthorized/unauthorized.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  redirectTo: '/login',\n  pathMatch: 'full'\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n}, {\n  path: 'unauthorized',\n  component: UnauthorizedComponent\n},\n// Protected routes\n{\n  path: 'dashboard',\n  component: DashboardComponent,\n  canActivate: [AuthGuard]\n},\n// Event routes\n{\n  path: 'events',\n  component: EventListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'events/create',\n  component: EventFormComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: [UserRole.Organizer, UserRole.Admin, UserRole.SuperAdmin]\n  }\n}, {\n  path: 'events/:id',\n  component: EventDetailComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'events/:id/edit',\n  component: EventFormComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: [UserRole.Organizer, UserRole.Admin, UserRole.SuperAdmin]\n  }\n}, {\n  path: 'events/:id/book',\n  component: TicketBookingComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: [UserRole.RegisteredUser]\n  }\n},\n// Ticket routes\n{\n  path: 'my-tickets',\n  component: MyTicketsComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: [UserRole.RegisteredUser]\n  }\n},\n// Location management (SuperAdmin only)\n{\n  path: 'locations',\n  component: LocationManagementComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: [UserRole.SuperAdmin]\n  }\n},\n// Catch-all route\n{\n  path: '**',\n  redirectTo: '/dashboard'\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {\n    static {\n      this.ɵfac = function AppRoutingModule_Factory(t) {\n        return new (t || AppRoutingModule)();\n      };\n    }\n    static {\n      this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n        type: AppRoutingModule\n      });\n    }\n    static {\n      this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n        imports: [RouterModule.forRoot(routes), RouterModule]\n      });\n    }\n  }\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}