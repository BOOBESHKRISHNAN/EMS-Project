{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class EventService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'https://localhost:7297/api/Event'; // Update with your backend URL\n  }\n  getEvents() {\n    return this.http.get(this.apiUrl);\n  }\n  getEventById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createEvent(event) {\n    return this.http.post(this.apiUrl, event);\n  }\n  updateEvent(id, event) {\n    return this.http.put(`${this.apiUrl}/${id}`, event);\n  }\n  deleteEvent(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function EventService_Factory(t) {\n      return new (t || EventService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: EventService,\n      factory: EventService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["EventService","constructor","http","apiUrl","getEvents","get","getEventById","id","createEvent","event","post","updateEvent","put","deleteEvent","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/workspace/src/app/services/event.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { EventResponseDTO, EventCreateDTO } from '../models/event.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService {\n  private apiUrl = 'https://localhost:7297/api/Event'; // Update with your backend URL\n\n  constructor(private http: HttpClient) {}\n\n  getEvents(): Observable<EventResponseDTO[]> {\n    return this.http.get<EventResponseDTO[]>(this.apiUrl);\n  }\n\n  getEventById(id: number): Observable<EventResponseDTO> {\n    return this.http.get<EventResponseDTO>(`${this.apiUrl}/${id}`);\n  }\n\n  createEvent(event: EventCreateDTO): Observable<EventResponseDTO> {\n    return this.http.post<EventResponseDTO>(this.apiUrl, event);\n  }\n\n  updateEvent(id: number, event: EventCreateDTO): Observable<EventResponseDTO> {\n    return this.http.put<EventResponseDTO>(`${this.apiUrl}/${id}`, event);\n  }\n\n  deleteEvent(id: number): Observable<void> {\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\n  }\n}"],"mappings":";;AAQA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,kCAAkC,CAAC,CAAC;EAEd;EAEvCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAqB,IAAI,CAACF,MAAM,CAAC;EACvD;EAEAG,YAAYA,CAACC,EAAU;IACrB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAmB,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EAChE;EAEAC,WAAWA,CAACC,KAAqB;IAC/B,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAmB,IAAI,CAACP,MAAM,EAAEM,KAAK,CAAC;EAC7D;EAEAE,WAAWA,CAACJ,EAAU,EAAEE,KAAqB;IAC3C,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAmB,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,KAAK,CAAC;EACvE;EAEAI,WAAWA,CAACN,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;;uBAvBWP,YAAY,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAZlB,YAAY;MAAAmB,OAAA,EAAZnB,YAAY,CAAAoB,IAAA;MAAAC,UAAA,EAFX;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}