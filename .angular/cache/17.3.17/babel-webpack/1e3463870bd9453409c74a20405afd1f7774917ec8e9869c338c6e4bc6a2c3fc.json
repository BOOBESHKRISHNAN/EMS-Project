{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./components/navbar/navbar.component\";\nfunction AppComponent_app_navbar_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-navbar\");\n  }\n}\nexport class AppComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.title = 'Event Management System';\n    this.isAuthenticated = false;\n  }\n  ngOnInit() {\n    this.authService.currentUser$.subscribe(user => {\n      this.isAuthenticated = !!user;\n      // Redirect to dashboard if user is authenticated and on login/register page\n      if (user && (this.router.url === '/login' || this.router.url === '/register' || this.router.url === '/')) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 4,\n      vars: 3,\n      consts: [[1, \"app-container\"], [4, \"ngIf\"], [1, \"main-content\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, AppComponent_app_navbar_1_Template, 1, 0, \"app-navbar\", 1);\n          i0.ɵɵelementStart(2, \"main\", 2);\n          i0.ɵɵelement(3, \"router-outlet\");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isAuthenticated);\n          i0.ɵɵadvance();\n          i0.ɵɵclassProp(\"with-navbar\", ctx.isAuthenticated);\n        }\n      },\n      dependencies: [i3.NgIf, i2.RouterOutlet, i4.NavbarComponent],\n      styles: [\".app-container[_ngcontent-%COMP%] {\\n  min-height: 100vh;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.main-content[_ngcontent-%COMP%] {\\n  flex: 1;\\n  background-color: #f8f9fa;\\n}\\n\\n.main-content.with-navbar[_ngcontent-%COMP%] {\\n  margin-top: 60px; \\n\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7RUFDakIsYUFBYTtFQUNiLHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLE9BQU87RUFDUCx5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxnQkFBZ0IsRUFBRSxxQkFBcUI7QUFDekMiLCJzb3VyY2VzQ29udGVudCI6WyIuYXBwLWNvbnRhaW5lciB7XG4gIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xufVxuXG4ubWFpbi1jb250ZW50IHtcbiAgZmxleDogMTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcbn1cblxuLm1haW4tY29udGVudC53aXRoLW5hdmJhciB7XG4gIG1hcmdpbi10b3A6IDYwcHg7IC8qIEhlaWdodCBvZiBuYXZiYXIgKi9cbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelement","AppComponent","constructor","authService","router","title","isAuthenticated","ngOnInit","currentUser$","subscribe","user","url","navigate","ɵɵdirectiveInject","i1","AuthService","i2","Router","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtemplate","AppComponent_app_navbar_1_Template","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵclassProp"],"sources":["/workspace/src/app/app.component.ts","/workspace/src/app/app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'Event Management System';\n  isAuthenticated = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.authService.currentUser$.subscribe(user => {\n      this.isAuthenticated = !!user;\n      \n      // Redirect to dashboard if user is authenticated and on login/register page\n      if (user && (this.router.url === '/login' || this.router.url === '/register' || this.router.url === '/')) {\n        this.router.navigate(['/dashboard']);\n      }\n    });\n  }\n}","<div class=\"app-container\">\n  <app-navbar *ngIf=\"isAuthenticated\"></app-navbar>\n  \n  <main class=\"main-content\" [class.with-navbar]=\"isAuthenticated\">\n    <router-outlet></router-outlet>\n  </main>\n</div>"],"mappings":";;;;;;;ICCEA,EAAA,CAAAC,SAAA,iBAAiD;;;ADQnD,OAAM,MAAOC,YAAY;EAIvBC,YACUC,WAAwB,EACxBC,MAAc;IADd,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,MAAM,GAANA,MAAM;IALhB,KAAAC,KAAK,GAAG,yBAAyB;IACjC,KAAAC,eAAe,GAAG,KAAK;EAKpB;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACJ,WAAW,CAACK,YAAY,CAACC,SAAS,CAACC,IAAI,IAAG;MAC7C,IAAI,CAACJ,eAAe,GAAG,CAAC,CAACI,IAAI;MAE7B;MACA,IAAIA,IAAI,KAAK,IAAI,CAACN,MAAM,CAACO,GAAG,KAAK,QAAQ,IAAI,IAAI,CAACP,MAAM,CAACO,GAAG,KAAK,WAAW,IAAI,IAAI,CAACP,MAAM,CAACO,GAAG,KAAK,GAAG,CAAC,EAAE;QACxG,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;;IAExC,CAAC,CAAC;EACJ;;;uBAlBWX,YAAY,EAAAF,EAAA,CAAAc,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAhB,EAAA,CAAAc,iBAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;YAAZhB,YAAY;MAAAiB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,sBAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCTzBzB,EAAA,CAAA2B,cAAA,aAA2B;UACzB3B,EAAA,CAAA4B,UAAA,IAAAC,kCAAA,wBAAoC;UAEpC7B,EAAA,CAAA2B,cAAA,cAAiE;UAC/D3B,EAAA,CAAAC,SAAA,oBAA+B;UAEnCD,EADE,CAAA8B,YAAA,EAAO,EACH;;;UALS9B,EAAA,CAAA+B,SAAA,EAAqB;UAArB/B,EAAA,CAAAgC,UAAA,SAAAN,GAAA,CAAAnB,eAAA,CAAqB;UAEPP,EAAA,CAAA+B,SAAA,EAAqC;UAArC/B,EAAA,CAAAiC,WAAA,gBAAAP,GAAA,CAAAnB,eAAA,CAAqC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}