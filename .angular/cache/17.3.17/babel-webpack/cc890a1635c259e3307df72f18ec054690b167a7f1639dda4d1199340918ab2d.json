{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\nimport { RoleGuard } from './guards/role.guard';\nimport { UserRole } from './models/user.model';\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { EventListComponent } from './components/events/event-list/event-list.component';\nimport { EventFormComponent } from './components/events/event-form/event-form.component';\nimport { EventDetailComponent } from './components/events/event-detail/event-detail.component';\nimport { TicketBookingComponent } from './components/tickets/ticket-booking/ticket-booking.component';\nimport { MyTicketsComponent } from './components/tickets/my-tickets/my-tickets.component';\nimport { LocationManagementComponent } from './components/locations/location-management/location-management.component';\nimport { UnauthorizedComponent } from './components/unauthorized/unauthorized.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: '',\n  redirectTo: '/login',\n  pathMatch: 'full'\n}, {\n  path: 'login',\n  component: LoginComponent\n}, {\n  path: 'register',\n  component: RegisterComponent\n}, {\n  path: 'unauthorized',\n  component: UnauthorizedComponent\n},\n// Protected routes\n{\n  path: 'dashboard',\n  component: DashboardComponent,\n  canActivate: [AuthGuard]\n},\n// Event routes\n{\n  path: 'events',\n  component: EventListComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'events/create',\n  component: EventFormComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: [UserRole.Organizer, UserRole.Admin, UserRole.SuperAdmin]\n  }\n}, {\n  path: 'events/:id',\n  component: EventDetailComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: 'events/:id/edit',\n  component: EventFormComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: [UserRole.Organizer, UserRole.Admin, UserRole.SuperAdmin]\n  }\n}, {\n  path: 'events/:id/book',\n  component: TicketBookingComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: [UserRole.RegisteredUser]\n  }\n},\n// Ticket routes\n{\n  path: 'my-tickets',\n  component: MyTicketsComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: [UserRole.RegisteredUser]\n  }\n},\n// Location management (SuperAdmin only)\n{\n  path: 'locations',\n  component: LocationManagementComponent,\n  canActivate: [AuthGuard, RoleGuard],\n  data: {\n    roles: [UserRole.SuperAdmin]\n  }\n},\n// Catch-all route\n{\n  path: '**',\n  redirectTo: '/dashboard'\n}];\nexport class AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","AuthGuard","RoleGuard","UserRole","LoginComponent","RegisterComponent","DashboardComponent","EventListComponent","EventFormComponent","EventDetailComponent","TicketBookingComponent","MyTicketsComponent","LocationManagementComponent","UnauthorizedComponent","routes","path","redirectTo","pathMatch","component","canActivate","data","roles","Organizer","Admin","SuperAdmin","RegisteredUser","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["/workspace/src/app/app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\nimport { RoleGuard } from './guards/role.guard';\nimport { UserRole } from './models/user.model';\n\nimport { LoginComponent } from './components/login/login.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { EventListComponent } from './components/events/event-list/event-list.component';\nimport { EventFormComponent } from './components/events/event-form/event-form.component';\nimport { EventDetailComponent } from './components/events/event-detail/event-detail.component';\nimport { TicketBookingComponent } from './components/tickets/ticket-booking/ticket-booking.component';\nimport { MyTicketsComponent } from './components/tickets/my-tickets/my-tickets.component';\nimport { LocationManagementComponent } from './components/locations/location-management/location-management.component';\nimport { UnauthorizedComponent } from './components/unauthorized/unauthorized.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent },\n  { path: 'unauthorized', component: UnauthorizedComponent },\n  \n  // Protected routes\n  {\n    path: 'dashboard',\n    component: DashboardComponent,\n    canActivate: [AuthGuard]\n  },\n  \n  // Event routes\n  {\n    path: 'events',\n    component: EventListComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'events/create',\n    component: EventFormComponent,\n    canActivate: [AuthGuard, RoleGuard],\n    data: { roles: [UserRole.Organizer, UserRole.Admin, UserRole.SuperAdmin] }\n  },\n  {\n    path: 'events/:id',\n    component: EventDetailComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'events/:id/edit',\n    component: EventFormComponent,\n    canActivate: [AuthGuard, RoleGuard],\n    data: { roles: [UserRole.Organizer, UserRole.Admin, UserRole.SuperAdmin] }\n  },\n  {\n    path: 'events/:id/book',\n    component: TicketBookingComponent,\n    canActivate: [AuthGuard, RoleGuard],\n    data: { roles: [UserRole.RegisteredUser] }\n  },\n  \n  // Ticket routes\n  {\n    path: 'my-tickets',\n    component: MyTicketsComponent,\n    canActivate: [AuthGuard, RoleGuard],\n    data: { roles: [UserRole.RegisteredUser] }\n  },\n  \n  // Location management (SuperAdmin only)\n  {\n    path: 'locations',\n    component: LocationManagementComponent,\n    canActivate: [AuthGuard, RoleGuard],\n    data: { roles: [UserRole.SuperAdmin] }\n  },\n  \n  // Catch-all route\n  { path: '**', redirectTo: '/dashboard' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}